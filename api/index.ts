import express from 'express';
import axios from 'axios';

const app = express();

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram
const TELEGRAM_BOT_TOKEN = '7283726243:AAFW3mIA1SzOmyftdqiRv8xTxtAmyk1rLmw';
const TELEGRAM_CHAT_ID = '5018443124';

const LOGO_BASE64 = 'iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AkEEjUXUBJp+AAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAK0lEQVQ4y2NgGAWjYBSMglEwCkbBKBgM4H8Q8p+BgYGB8X8Q0jQKRgEAGY0BCS1Xw/MAAAAASUVORK5CYII=';

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ GET –∑–∞–ø—Ä–æ—Å–æ–≤
app.get('/', async (req, res) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ query-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const queryData = req.query;
    const userIp = req.ip || req.headers['x-forwarded-for'] || req.connection.remoteAddress;

    console.log('GET request from:', userIp, 'data:', queryData);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    await sendToTelegram(userIp, queryData);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imageBuffer = Buffer.from(LOGO_BASE64, 'base64');
    res.setHeader('Content-Type', 'image/png');
    res.setHeader('Content-Length', imageBuffer.length);
    res.setHeader('Cache-Control', 'no-cache'); // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    res.status(200).send(imageBuffer);

  } catch (error) {
    console.error('Error:', error);
    res.status(500).send('Internal Server Error');
  }
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
// @ts-ignore
async function sendToTelegram(ip, data) {
  try {
    const message = `üåê GET –∑–∞–ø—Ä–æ—Å –ª–æ–≥–æ—Ç–∏–ø–∞\n\n` +
                   `üñ•Ô∏è IP: ${ip}\n` +
                   `üìä –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data, null, 2)}\n` +
                   `üîó Referer: ${data.ref || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`;

    await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      chat_id: TELEGRAM_CHAT_ID,
      text: message,
      parse_mode: 'Markdown'
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ Telegram:', error);
  }
}

export default app;